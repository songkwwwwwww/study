
;; Function main (main, funcdef_no=0, decl_uid=2283, cgraph_uid=0, symbol_order=0)

main ()
{
  char buffer[10];
  int D.2287;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_puts (&"test"[0]);
  __builtin_putchar (99);
  __builtin_memcpy (&buffer, "test", 5);
  _5 = 0;
  buffer ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 5 (_5 - 5 )

After Coalescing:

Partition map 

Partition 0 (_5 - 5 )

main ()
{
  char buffer[10];
  int D.2287;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_puts (&"test"[0]);
  __builtin_putchar (99);
  __builtin_memcpy (&buffer, "test", 5);
  _5 = 0;
  buffer ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _5;
;;    succ:       EXIT

}


Partition 0: size 10 align 16
	buffer

;; Generating RTL for gimple basic block 2

;; __builtin_puts (&"test"[0]);

(insn 6 5 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f992bd56ea0 *.LC0>)) test.c:7 -1
     (nil))

(call_insn 7 6 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f992bcab360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) test.c:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __builtin_putchar (99);

(insn 8 7 9 (set (reg:SI 5 di)
        (const_int 99 [0x63])) test.c:8 -1
     (nil))

(call_insn 9 8 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f992bcab000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) test.c:8 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; __builtin_memcpy (&buffer, "test", 5);

(insn 10 9 11 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) test.c:9 -1
     (nil))

(insn 11 10 12 (set (mem/c:SI (reg:DI 89) [0 MEM[(void *)&buffer]+0 S4 A64])
        (const_int 1953719668 [0x74736574])) test.c:9 -1
     (nil))

(insn 12 11 0 (set (mem/c:QI (plus:DI (reg:DI 89)
                (const_int 4 [0x4])) [0 MEM[(void *)&buffer]+4 S1 A32])
        (const_int 0 [0])) test.c:9 -1
     (nil))

;; _5 = 0;

(insn 13 12 0 (set (reg:SI 87 [ D.2291 ])
        (const_int 0 [0])) test.c:11 -1
     (nil))

;; buffer ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L1>:

(code_label 14 13 15 2 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 16 15 17 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.2291 ])) -1
     (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 18 17 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 17.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.2292+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) test.c:5 -1
     (nil))
(insn 6 3 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f992bd56ea0 *.LC0>)) test.c:7 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f992bcab360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) test.c:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:SI 5 di)
        (const_int 99 [0x63])) test.c:8 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f992bcab000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) test.c:8 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) test.c:9 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (reg:DI 89) [0 MEM[(void *)&buffer]+0 S4 A64])
        (const_int 1953719668 [0x74736574])) test.c:9 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:QI (plus:DI (reg:DI 89)
                (const_int 4 [0x4])) [0 MEM[(void *)&buffer]+4 S1 A32])
        (const_int 0 [0])) test.c:9 -1
     (nil))
(insn 13 12 16 2 (set (reg:SI 87 [ D.2291 ])
        (const_int 0 [0])) test.c:11 -1
     (nil))
(insn 16 13 20 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.2291 ])) -1
     (nil))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) test.c:12 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.2292+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) test.c:12 -1
     (nil))
(jump_insn 22 21 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) test.c:12 -1
     (nil)
 -> 25)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 28 22 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 28 24 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f992bda2ca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) test.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 24 23 25)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 25 24 29 7 3 "" [1 uses])
(note 29 25 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 29 0 7 (use (reg/i:SI 0 ax)) test.c:12 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

