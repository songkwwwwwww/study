/*
참조 : 
    알고리즘 문제 해결 전략(종만북)
*/
/*
    상태 객체의 구현

상태를 표현하는 자료 구조의 선택은 프로그램의 효율성에 큰 영향을 미치기 때문에
그 중요성을 무시해서는 안된다.

상태 객체를 작성할 때 첫 번째로 유의할 점은 

첫 번째, 상태에 대한 여러 연산을 가능한 한 효율적으로 구현해야 한다.
두 상태가 같은지를 확인하는 연산이나, 현재 상태에 인접한 상태들을 모두 계산하는 연산 등은
탐색 과정에서 반복적으로 수행되므로 이들을 가능한 한 효율적으로 구현할 필요가 있다.

두 번째, 가능한 한 적은 메모리를 사용해야 한다.
너비 우선 탐색이나 양방향 탐색을 구현할 경우 상태 객체는 큐에도 들어가고
map의 키로도 사용된다. 상태 객체의 크기가 클 경우 프로그램의 메모리 사용량은 물론이고,
객체를 생성하거나 복사하는 데 드는 시간도 무시할 수 없다.


*/